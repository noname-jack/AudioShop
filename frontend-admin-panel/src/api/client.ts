import axios, { type AxiosResponse, type AxiosError } from 'axios'
import {notify} from "@kyvg/vue3-notification";

// –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ HTTP –∫–ª–∏–µ–Ω—Ç–∞
export const apiClient = axios.create({
    baseURL: import.meta.env.VITE_API_BASE_URL || 'http://localhost:8081/admin/',
    timeout: 10000,
    headers: {
        'Content-Type': 'application/json',
    },
})

// Interceptor –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
apiClient.interceptors.request.use(
    (config) => {
        console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}`)
        return config
    },
    (error) => {
        console.error('‚ùå Request Error:', error)
        return Promise.reject(error)
    }
)

// Interceptor –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
apiClient.interceptors.response.use(
    (response: AxiosResponse) => {
        console.log(`‚úÖ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`)
        return response
    },
    (error: AxiosError) => {
        if (error.response) {
            // –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä 404, 500 –∏ —Ç.–¥.)
            const data: any = error.response.data

            notify({
                title: `–û—à–∏–±–∫–∞ ${error.response.status}`,
                text: data?.error || data?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
                type: 'error',
                duration: 5000
            })
        } else {
            // –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ (—Ç–∞–π–º–∞—É—Ç, –Ω–µ—Ç —Å–µ—Ç–∏ –∏ —Ç.–¥.)
            notify({
                title: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
                text: error.message || '–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞',
                type: 'error',
                duration: 5000
            })
        }
        return Promise.reject(error)
    }
)